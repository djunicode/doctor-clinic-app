{"version":3,"sources":["images/hospital.jpg","components/signupForm.js","custom hooks/useWillMount.js","context/Context.js","components/Header.js","views/DoctorSignup.js","views/SignIn.js","components/MainBody2.js","components/Webcam.js","views/patientDashboard.js","components/LeftSideBar.js","components/PatientInfo.js","components/MainBody.js","components/RightSideBar.js","views/receptionist1.js","components/Schedule.js","views/receptionist2.js","views/receptionist3.js","components/LeftSideBarDoctor.js","components/AppointmentDay.js","views/doctorDashboard.js","views/NotFound.js","App.js","serviceWorker.js","index.js","images/defaultdp.webp"],"names":["module","exports","SignupForm","props","useState","values","firstname","setFirstname","lastname","setLastname","username","setUsername","password1","setPassword1","password2","setPassword2","qualification","setQualification","speciality","setSpeciality","postgrad","setPostgraduation","email","setEmail","DOB","setDOB","phone","setPhone","dailyTime","setDailyTime","endTime","setEndTime","signUp","e","a","preventDefault","alert","formdata","FormData","method","append","activity","fetch","url","headers","token","body","response","json","resData","console","log","added","updated","toast","success","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addDoctor","Doctor","className","style","overflowY","height","Grid","container","item","lg","sm","xs","TextField","required","id","label","defaultValue","onChange","event","target","value","variant","type","dt","Date","getMonth","getDate","getFullYear","today","width","shrink","InputLabelProps","FormControl","InputLabel","Select","labelId","labelWidth","MenuItem","paddingBottom","Button","onClick","newestOnTop","rtl","pauseOnFocusLoss","useWillMount","func","willMount","useRef","current","Context","createContext","INIT_STATE","doctors","patients","appointments","doctorProfile","loading","Token","is_doctor","ContextProvider","clinicData","setClinicData","loggedIn","setLoggedIn","init","localStorage","getItem","Data","JSON","parse","isDoctor","getClinicData","doctor_id","docID","arrayOfPromises","getAllDoctors","getAllPatients","getDailyAppointments","getDoctorProfile","Promise","all","responses","data","sort","sort_daily_appointments","b","forceRefreshAppt","refreshProfile","d","getYear","login","password","stringify","res","isStaff","setItem","Provider","addPatient","patient","hasOwnProperty","doctor","attendance","index","temp","present","logout","removeItem","err","children","Header","context","useContext","history","useHistory","AppBar","window","location","pathname","push","DoctorSignup","activityIndicator","setActivityIndicator","LinearProgress","DoctorSignIn","Pass","setPass","checkCredentials","fullWidth","name","autoComplete","MainBody2","condition","setCondition","setHistory","submit","length","Patient","edit","justifyContent","InputProps","readOnly","multiline","rows","backgroundColor","color","fontWeight","fontSize","borderRadius","constraints","facingMode","WebCam","webcamRef","imageSrc","setImageSrc","videoConstraints","capture","useCallback","image","getScreenshot","demo","uploadDp","dp","ID","closeCamera","border","textAlign","right","top","cursor","audio","ref","screenshotFormat","marginTop","marginRight","marginLeft","myToken","PatientDashboard","state","modal","setModal","validation","editModal","setEditModal","details","setDetails","receiptAppointment","setReceiptAppointment","type_of_report","set_type_of_report","Reports","setReports","Receipts","setReceipts","report","setReport","receipt","setReceipt","receiptPrice","setReceiptPrice","openCamera","setOpenCamera","usernamehandler","passhandler","patientID","URLSearchParams","search","get","view","arr","upload","isNaN","parseFloat","file","parseInt","appt_id","document","getElementById","disabled","toLowerCase","isPatient","classes","makeStyles","theme","paper","palette","background","boxShadow","shadows","padding","spacing","useStyles","left","map","href","filelocation","typeof","date","showPatientAppointments","flag","appt","appointment","patient_id","start_time","obj","paddingTop","md","src","profile_pic","require","Modal","open","flex","display","alignItems","Webcam","first_name","last_name","float","margin","contact_no","conditions","class","marginBottom","click","files","for","onClose","aria-labelledby","aria-describedby","flexDirection","editBody","LeftSideBar","alt","this","to","className1","className2","Component","PatientInfo","dname","MainBody","patientsToShow","setPatientsToShow","placeholder","onKeyDown","setTimeout","val","trim","filter","pat","includes","patList","RightSideBar","spinner","showSpinner","DOWcodes","0","1","2","3","4","5","6","markAttendance","apptID","getDay","zIndex","time","getHours","getMinutes","slice","status","end_time","showMarker","Receptionist1","Container","fluid","Row","Col","Schedule","person","dates","slots","selectedType","selectedPatient","selectedDoctor","selectedDate","selectedSlot","spinnerVisible","leapYr","y","daysInMonth","7","8","9","10","11","12","appointmentValidation","getSlotsValidation","getTherapistData","setState","availableSlots","hoursCalc","hr","confirmAppointment","split","temp1","then","error","findIndex","slot","splice","textContent","catch","m","i","doctorData","patientData","daily_end_time","daily_start_time","abc","x","array","splitUp","toString","join","pop","element","Autocomplete","options","getOptionLabel","option","renderInput","params","newValue","alignSelf","React","contextType","Receptionist2","defVal","Receptionist3","xl","LeftSideBarDoctor","demoDP","AppointmentDay","onclick","DoctorDashboard","NotFound","App","exact","path","component","from","SignIn","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.743b8bd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hospital.b4fb5e21.jpg\";","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../views/doctorSignup.css';\r\n\r\nconst SignupForm = (props) => {\r\n    const [firstname, setFirstname] = useState(props.values.firstname);\r\n    const [lastname, setLastname] = useState(props.values.lastname);\r\n    const [username,setUsername] = useState(props.values.username)\r\n    const [password1,setPassword1] = useState(props.values.password1)\r\n    const [password2,setPassword2] = useState(props.values.password2)\r\n    const [qualification,setQualification] = useState(props.values.qualification)\r\n    const [speciality,setSpeciality] = useState(props.values.speciality)\r\n    const [postgrad,setPostgraduation] = useState(props.values.postgrad)\r\n    const [email,setEmail] = useState(props.values.email)\r\n    const [DOB,setDOB] = useState(props.values.DOB)\r\n    const [phone, setPhone] = useState(props.values.phone);\r\n    const [dailyTime, setDailyTime] = useState(props.values.dailyTime);\r\n    const [endTime, setEndTime] = useState(props.values.endTime);\r\n\r\n    const today = () => {\r\n        let dt = new Date()\r\n        return dt.getMonth() + \"-\" + dt.getDate() + \"-\" + dt.getFullYear() \r\n    }\r\n\r\n    const signUp = async(e) => {\r\n        e.preventDefault()\r\n        if(username===\"\" || password1===\"\" || password2===\"\" || email===\"\" || qualification===\"\" || postgrad===\"\" || speciality===\"\"){\r\n            alert(\"Fill in all fields\")\r\n        }\r\n        else if(password1!==password2){\r\n            alert(\"Passwords do not match\")\r\n        }\r\n        else{\r\n            let formdata = new FormData()\r\n            if(props.method===\"POST\"){\r\n                formdata.append(\"username\",username)\r\n                formdata.append(\"password\",password1)\r\n                formdata.append(\"password2\",password2)\r\n            }\r\n            formdata.append(\"Postgrad\",postgrad)\r\n            formdata.append(\"Specialization\",speciality)\r\n            formdata.append(\"Degrees\",qualification)\r\n            formdata.append(\"email\",email)\r\n            formdata.append(\"DOB\",DOB)\r\n            formdata.append(\"first_name\",firstname)\r\n            formdata.append(\"last_name\",lastname)\r\n            formdata.append(\"contact_no\",phone)\r\n            formdata.append(\"daily_start_time\",dailyTime)\r\n            formdata.append(\"daily_end_time\",endTime)\r\n            //DOB, 'first_name','last_name','contact_no', daily_start_time, daily_end_time\r\n            try{\r\n                props.activity(true);\r\n                const response = await fetch(props.url, {\r\n                    method: props.method,\r\n                    headers: {\r\n                        //'Content-Type': 'application/json',\r\n                        'Authorization': props.token\r\n                    },\r\n                    body: formdata\r\n                })\r\n                // console.log(await response.text())\r\n                const resData = await response.json()\r\n                console.log(resData)\r\n                if(resData.added || resData.updated){\r\n                    toast.success(props.message, {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n                props.activity(false);\r\n                props.addDoctor(resData.Doctor)\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                props.activity(false)\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <form className=\"form\" style={{overflowY: (props.method===\"PUT\" && 'scroll'), height: (props.method===\"PUT\" && '95%')}}>\r\n            <Grid container className=\"gridContainer\">\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container \">\r\n                        <TextField\r\n                            required\r\n                            className=\"fields1\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"First Name\"\r\n                            defaultValue={firstname}\r\n                            onChange={(event) => setFirstname(event.target.value)}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container  \">\r\n                        <TextField\r\n                            required\r\n                            type=\"text\"\r\n                            className=\"fields1\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Last Name\"\r\n                            defaultValue={lastname}\r\n                            onChange={(event) => setLastname(event.target.value)}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                {props.method===\"POST\" && <Grid className=\"fields-container\" container item sm={6} xs={12} >\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField required className=\"fields1\" id=\"outlined-basic\" label=\"Username\" onChange={(event)=>setUsername(event.target.value)} variant=\"outlined\"/>\r\n                    </div>\r\n                </Grid>}\r\n                <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField required type=\"email\" className=\"fields1\" id=\"outlined-basic\" label=\"Email-ID\" defaultValue={email} onChange={(event)=>setEmail(event.target.value)} variant=\"outlined\"/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField\r\n                            required\r\n                            className=\"fields1\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Phone\"\r\n                            defaultValue={phone}\r\n                            onChange={(event) => setPhone(event.target.value)}\r\n                            type=\"Number\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                {props.method===\"POST\" && <> <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField required className=\"fields1\" id=\"outlined-basic\" label=\"Password\" type=\"Password\" onChange={(event)=>setPassword1(event.target.value)} variant=\"outlined\" />\r\n                    </div>\r\n                </Grid>\r\n                <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField required className=\"fields1\" id=\"outlined-basic\" label=\"Re-enter Password\" type=\"Password\" onChange={(event)=>setPassword2(event.target.value)} variant=\"outlined\" />\r\n                    </div>\r\n                </Grid> </>}\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField\r\n                        id=\"date\"\r\n                        label=\"Date of Birth\"\r\n                        type=\"date\"\r\n                        defaultValue={today()}\r\n                        style={{ width: 230 }}\r\n                        defaultValue={DOB}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(event) => setDOB(event.target.value)}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField\r\n                            id=\"time\"\r\n                            label=\"Daily Start Time\"\r\n                            type=\"time\"\r\n                            // defaultValue={today()}\r\n                            style={{ width: 230 }}\r\n                            defaultValue={dailyTime}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={(event) => setDailyTime(event.target.value+\":00\")}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid\r\n                    className=\"fields-container\"\r\n                    container\r\n                    item\r\n                    lg={6}\r\n                    sm={8}\r\n                    xs={12}\r\n                >\r\n                    <div className=\"fields-inner-container\">\r\n                        <TextField\r\n                        id=\"time\"\r\n                        label=\"Daily End Time\"\r\n                        type=\"time\"\r\n                        // defaultValue={today()}\r\n                        style={{ width: 230 }}\r\n                        defaultValue={endTime}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(event) => setEndTime(event.target.value+\":00\")}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <FormControl variant=\"outlined\" >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                Qualification*\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                className=\"fields1\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                defaultValue={qualification}\r\n                                onChange={(event)=>{setQualification(event.target.value)}}\r\n                                labelWidth={120}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={'MBBS'}>MBBS</MenuItem>\r\n                                <MenuItem value={'BDS'}>BDS</MenuItem>\r\n                                <MenuItem value={'BHMS'}>BHMS</MenuItem>\r\n                                <MenuItem value={'DHMS'}>DHMS</MenuItem>\r\n                                <MenuItem value={'BAMS'}>BAMS</MenuItem>\r\n                                <MenuItem value={'BUMS'}>BUMS</MenuItem>\r\n                                <MenuItem value={'BVSc & AH'}>{'BVSc & AH'}</MenuItem>\r\n                                <MenuItem value={'B.Pharm.'}>B.Pharm</MenuItem>\r\n                                <MenuItem value={'D.Pharm.'}>D.Pharm</MenuItem>\r\n                                <MenuItem value={'BOT'}>BOT</MenuItem>\r\n                                <MenuItem value={'BMLT'}>BMLT</MenuItem>\r\n                                <MenuItem value={'BPT'}>BPT</MenuItem>\r\n                                <MenuItem value={'B.Sc. Nursing'}>B.Sc. Nursing</MenuItem>\r\n                                <MenuItem value={'BNYS'}>BNYS</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <FormControl variant=\"outlined\" >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                Postgraduation*\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                className=\"fields1\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                defaultValue={postgrad}\r\n                                onChange={(event)=>{setPostgraduation(event.target.value)}}\r\n                                labelWidth={120}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={'None'}>None</MenuItem>\r\n                                <MenuItem value={'MD'}>MD</MenuItem>\r\n                                <MenuItem value={'MS'}>MS</MenuItem>\r\n                                <MenuItem value={'Diploma'}>Diploma</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </Grid>\r\n                <Grid className=\"fields-container\" container item sm={6} xs={12}>\r\n                    <div className=\"fields-inner-container\">\r\n                        <FormControl variant=\"outlined\" >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                Speciality*\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                className=\"fields1\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                defaultValue={speciality}\r\n                                onChange={(event)=>{setSpeciality(event.target.value)}}\r\n                                labelWidth={120}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Select</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={'None'}>None</MenuItem>\r\n                                <MenuItem value={'DM'}>DM</MenuItem>\r\n                                <MenuItem value={'MCh'}>MCh</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <div style={{paddingBottom: 30}}>\r\n                <Button type=\"submit\" className=\"signUpButton\" id=\"stylebutton\" variant=\"contained\" onClick={(e)=>signUp(e)}>{props.method===\"POST\" ? \"SIGN UP\" : \"SUBMIT\"}</Button>\r\n            </div>\r\n            {/* <div style={{paddingBottom: 30}}>\r\n                <p>Already Registered? <Link className=\"link\" to=\"/\">Login</Link></p>\r\n            </div> */}\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SignupForm;","import { useRef } from 'react';\r\n\r\nconst useWillMount = (func) => {\r\n    const willMount = useRef(true);\r\n    if (willMount.current) {\r\n      func();\r\n    }\r\n    willMount.current = false;\r\n}\r\n\r\nexport default useWillMount;","import React, {useState, useEffect, createContext} from 'react'\r\nimport useWillMount from '../custom hooks/useWillMount'\r\n\r\nexport const Context = createContext()\r\n\r\nconst INIT_STATE = {\r\n    doctors: [],\r\n    patients: [],\r\n    appointments: [],\r\n    doctorProfile: null,\r\n    loading: true\r\n}\r\n\r\nvar Token = null\r\nvar is_doctor = false\r\n\r\nconst ContextProvider = (props) => {\r\n    const [clinicData, setClinicData] = useState(INIT_STATE)\r\n    const [loggedIn, setLoggedIn] = useState(null)\r\n\r\n    const init = async() => {\r\n        try{\r\n            let Data = await localStorage.getItem('doctorClinicAppData')\r\n            if (Data){\r\n                Data = JSON.parse(Data)\r\n                is_doctor = Data.isDoctor\r\n                Token = Data.token\r\n                if(Token){\r\n                    setLoggedIn(true)\r\n                    getClinicData(Data.doctor_id)\r\n                }\r\n            }\r\n            else{\r\n                setLoggedIn(false)\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useWillMount(() => {\r\n        init()\r\n    })\r\n\r\n    const getClinicData = async(docID) => {\r\n        let arrayOfPromises = []\r\n        if(is_doctor){\r\n            arrayOfPromises = [getAllDoctors(), getAllPatients(), getDailyAppointments(), getDoctorProfile(docID)]\r\n        }\r\n        else{\r\n            arrayOfPromises = [getAllDoctors(), getAllPatients(), getDailyAppointments()]\r\n        }\r\n        const responses = await Promise.all(arrayOfPromises)\r\n        console.log(responses);\r\n        setClinicData({\r\n            doctors: responses[0],\r\n            patients: responses[1],\r\n            appointments: responses[2],\r\n            doctorProfile: responses[3],\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    const getAllDoctors = async() => {\r\n        const url = \"api/doclist/\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data;\r\n    }\r\n\r\n    const getAllPatients = async() => {\r\n        const url = \"api/allpat/\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data;\r\n    }\r\n\r\n    const getDailyAppointments = async() => {\r\n        const url = \"api/daily/\"\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data.sort(sort_daily_appointments);\r\n    }\r\n\r\n    const sort_daily_appointments = (a,b) => {\r\n        if(a.token > b.token){\r\n            return 1\r\n        }\r\n        return -1\r\n    }\r\n\r\n    const forceRefreshAppt = async() => {\r\n        setClinicData({\r\n            ...clinicData,\r\n            appointments: await getDailyAppointments()\r\n        })\r\n    }\r\n\r\n    const addPatient = (patient) => {\r\n        if(clinicData.patients.hasOwnProperty('No Patients')){\r\n            setClinicData({\r\n                ...clinicData,\r\n                patients: [patient]\r\n            }) \r\n        }\r\n        else{\r\n            setClinicData({\r\n                ...clinicData,\r\n                patients: [...clinicData.patients, patient]\r\n            })\r\n        }\r\n    }\r\n\r\n    const addDoctor = (doctor) => {\r\n        if(clinicData.doctors.hasOwnProperty('No Doctors')){\r\n            setClinicData({\r\n                ...clinicData,\r\n                doctors: [doctor]\r\n            }) \r\n        }\r\n        else{\r\n            setClinicData({\r\n                ...clinicData,\r\n                doctors: [...clinicData.doctors, doctor]\r\n            })\r\n        }\r\n    }\r\n\r\n    const refreshProfile = async(docID) => {\r\n        setClinicData({\r\n            ...clinicData,\r\n            doctorProfile: await getDoctorProfile(docID)\r\n        })\r\n    }\r\n\r\n    const attendance = (index) => {\r\n        let temp = clinicData.appointments\r\n        temp[index].present = true\r\n        setClinicData({\r\n            ...clinicData,\r\n            appointments: temp\r\n        })\r\n    }\r\n\r\n    const getDoctorProfile = async(docID) => {\r\n        let d = new Date()\r\n        // alert(\"x\")\r\n        const url = `api/newAppointment?id=${docID}&date=${(d.getYear()+1900)+'-'+(d.getMonth()+1)+'-'+(d.getDate())}`\r\n        const response = await fetch(url)\r\n        // console.log(await response.text())\r\n        const data = await response.json()\r\n        console.log(data)\r\n        return data\r\n        // doctorProfile = data\r\n    }\r\n\r\n    const login = async(username, password) => {\r\n        try{\r\n            const res = await fetch(\"api/login/\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password\r\n                })\r\n            })\r\n            const resData = await res.json()\r\n            console.log(resData)\r\n            if(!(resData.isDoctor || resData.isStaff)){\r\n                return false\r\n            }\r\n            if(resData.token){\r\n                is_doctor = resData.isDoctor\r\n                localStorage.setItem('doctorClinicAppData', JSON.stringify(resData))\r\n                Token = resData.token\r\n                setLoggedIn(true)\r\n                getClinicData(resData.doctor_id)\r\n                return true\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        return false\r\n    }\r\n\r\n    const logout = () => {\r\n        setLoggedIn(false)\r\n        Token = null\r\n        is_doctor = false\r\n        try{\r\n            localStorage.removeItem('doctorClinicAppData')\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        setClinicData(INIT_STATE)\r\n    }\r\n\r\n    return(\r\n        <Context.Provider value={{\r\n            appointments: clinicData.appointments, \r\n            patients: clinicData.patients, \r\n            doctors: clinicData.doctors, \r\n            doctorProfile: clinicData.doctorProfile,\r\n            loading: clinicData.loading,\r\n            forceRefreshAppt,\r\n            addPatient,\r\n            addDoctor,\r\n            refreshProfile,\r\n            init, \r\n            attendance, \r\n            loggedIn,\r\n            is_doctor, \r\n            Token, \r\n            login,\r\n            logout\r\n        }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextProvider;","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Context } from '../context/Context';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    const context = useContext(Context)\r\n    const history = useHistory();\r\n\r\n    return(\r\n        <AppBar id=\"header\">\r\n            <span className=\"brand\"></span>\r\n            {context.loggedIn &&\r\n                <>\r\n                    <ExitToAppIcon id=\"logout\" onClick = {() => {\r\n                        context.logout()\r\n                    }}/>\r\n                    <HomeIcon id=\"home\" onClick = {() => {\r\n                        if(context.is_doctor){\r\n                            if(window.location.pathname!==\"/profile\"){\r\n                                history.push(\"/profile\")\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(window.location.pathname!==\"/home\"){\r\n                                history.push(\"/home\")\r\n                            }\r\n                        }\r\n                    }} />\r\n                    {!context.is_doctor && <AddBoxIcon id=\"addDoc\" onClick={() => {\r\n                        if(window.location.pathname!==\"/doctorsignup\"){\r\n                            history.push(\"/doctorsignup\")\r\n                        }\r\n                    }} />}\r\n                </>\r\n            }\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useContext } from 'react';\r\nimport SignupForm from '../components/signupForm';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Header from '../components/Header'\r\nimport { Context } from '../context/Context';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport './doctorSignup.css';\r\n\r\nconst values = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n    qualification: \"\",\r\n    speciality: \"\",\r\n    postgrad: \"\",\r\n    email: \"\",\r\n    DOB: \"\",\r\n    phone: \"\",\r\n    dailyTime: \"\",\r\n    endTime: \"\"\r\n}\r\n\r\nconst DoctorSignup = (props) => {\r\n    const [activityIndicator, setActivityIndicator] = useState(false)\r\n    const context = useContext(Context)\r\n\r\n    const addDoctor = (doctor) => {\r\n        context.addDoctor(doctor)\r\n    }\r\n\r\n    return(\r\n        <div className=\"bodyStyles\">\r\n            <Header />\r\n            {activityIndicator ? <LinearProgress /> : null}\r\n            <div className=\"outerContainer\">\r\n                <div className=\"innerContainer\">\r\n                    <div className=\"innerField\">\r\n                        <h1 className=\"heading\">DOCTOR-SIGNUP</h1>\r\n                        <SignupForm \r\n                            activity={setActivityIndicator} \r\n                            values={values} \r\n                            method= \"POST\"\r\n                            url='api/newdoc/'\r\n                            message=\"Doctor Added\"\r\n                            token={context.Token}\r\n                            addDoctor={addDoctor}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorSignup;","import React, { useState, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from '../components/Header';\r\nimport { Context } from '../context/Context';\r\nimport './signin.css';\r\n\r\nfunction DoctorSignIn() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [Pass, setPass] = useState(\"\");\r\n  const history = useHistory();\r\n  const [activityIndicator,setActivityIndicator] = useState(false)\r\n  const context = useContext(Context)\r\n  \r\n  const usernamehandler = e => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const passhandler = e => {\r\n    setPass(e.target.value);\r\n  };\r\n\r\n  const checkCredentials = async(e) => {\r\n    e.preventDefault()\r\n    setActivityIndicator(true);\r\n    let success = await context.login(username, Pass)\r\n    setActivityIndicator(false);\r\n    if(!success){\r\n      alert(\"Invalid credentials\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {activityIndicator ? <LinearProgress className=\"ProgressBar\" /> : null}\r\n      <div className=\"outerContainer\">\r\n            <div className=\"innerContainer\">\r\n                <div className=\"innerField\">\r\n                    <h1 className=\"welcome\">WELCOME!</h1>\r\n                    <form className=\"form\">\r\n                      <Grid container className=\"gridContainer\">\r\n                        <div className=\"fields-inner-container\">\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Username\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            className=\"fields\"\r\n                            onChange={usernamehandler}\r\n                            value={username}\r\n                          />\r\n                        </div>\r\n                        <div className=\"fields-inner-container\">\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            className=\"fields\"\r\n                            onChange={passhandler}\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n                      <div>\r\n                        <Button type=\"submit\" className=\"signInButton\" id=\"stylebutton\"  variant=\"contained\" onClick={(e) => checkCredentials(e)}>LOGIN</Button>\r\n                        \r\n                      </div>\r\n                      {/* <div style={{paddingBottom: 30}}>\r\n                        <p>Dont have an account? <Link className=\"link\" to=\"/doctorsignup\">Sign Up</Link></p>\r\n                      </div> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorSignIn;\r\n","import React, { useState, useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Context } from '../context/Context';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport './style.css'\r\n\r\nconst MainBody2 = (props) => {\r\n  const [firstname, setFirstname] = useState(props.values.firstname);\r\n  const [lastname, setLastname] = useState(props.values.lastname);\r\n  const [username, setUsername] = useState(props.values.username);\r\n  const [condition, setCondition] = useState(props.values.condition);\r\n  const [password1,setPassword1] = useState(props.values.password1)\r\n  const [password2,setPassword2] = useState(props.values.password2)\r\n  const [DOB, setDOB] = useState(props.values.DOB);\r\n  const [phone, setPhone] = useState(props.values.phone);\r\n  const [email, setEmail] = useState(props.values.email);\r\n  const [history, setHistory] = useState(props.values.history);\r\n  const context = useContext(Context)\r\n  const [activityIndicator, setActivityIndicator] = useState(false);\r\n\r\n  const today = () => {\r\n    let dt = new Date()\r\n    return dt.getMonth() + \"-\" + dt.getDate() + \"-\" + dt.getFullYear() \r\n  }\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (firstname === \"\" || lastname === \"\" || username === \"\" || condition === \"\" || DOB === \"\" || phone === \"\" || email === \"\" || password1 ===\"\" || password2 ===\"\") {\r\n      alert(\"Fill in all fields\");\r\n    } else if(password1!==password2){\r\n        alert(\"Passwords do not match\")\r\n    }\r\n    else if(props.type==\"POST\" && password1.length<8){\r\n      alert(\"Password must be longer than 8 characters\")\r\n    } else {\r\n      let formdata = new FormData();\r\n      formdata.append(\"first_name\", firstname);\r\n      formdata.append(\"last_name\", lastname);\r\n      formdata.append(\"conditions\", condition);\r\n      if(props.type==\"POST\"){\r\n        formdata.append(\"username\", username);\r\n        formdata.append(\"password\",password1)\r\n        formdata.append(\"password2\",password2)\r\n      }\r\n      formdata.append(\"DOB\", DOB);\r\n      formdata.append(\"contact_no\", phone);\r\n      formdata.append(\"email\", email);\r\n      formdata.append(\"history\", history);\r\n      try {\r\n        setActivityIndicator(true);\r\n        const response = await fetch(props.url, {\r\n          method: props.type,\r\n          headers: {\r\n            'Authorization': context.Token\r\n          },\r\n          body: formdata,\r\n        });\r\n        // console.log(await response.text())\r\n        const resData = await response.json();\r\n        if (resData.added || resData.updated) {\r\n          toast.success(props.message, {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          if(props.init){\r\n            props.init()\r\n          }\r\n          context.addPatient(resData.Patient)\r\n          // e.target.reset()\r\n        }\r\n        console.log(resData)\r\n        setActivityIndicator(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setActivityIndicator(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"MainContainer\">\r\n      <h2>{props.edit ? \"Edit\" : \"Add\"} Patient</h2>\r\n      <div className=\"formclass\" style={{height: (props.edit && '90%'), overflowY: (props.edit && 'scroll')}}>\r\n        <form className=\"form\">\r\n          <Grid container style={{ justifyContent: \"center\" }}>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"First Name\"\r\n                  defaultValue={firstname}\r\n                  onChange={(event) => setFirstname(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container  \">\r\n                <TextField\r\n                  required\r\n                  type=\"text\"\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Last Name\"\r\n                  defaultValue={lastname}\r\n                  onChange={(event) => setLastname(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id={props.edit ? \"outlined-read-only-input\" : \"outlined-basic\" }\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  defaultValue={username}\r\n                  InputProps={{\r\n                    readOnly: props.edit,\r\n                  }}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Email Id\"\r\n                  type=\"email\"\r\n                  defaultValue={email}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            {!props.edit && <> <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Enter Password\"\r\n                  type=\"Password\"\r\n                  defaultValue={password1}\r\n                  onChange={(event) => setPassword1(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Re-enter Password\"\r\n                  type=\"Password\"\r\n                  defaultValue={password2}\r\n                  onChange={(event) => setPassword2(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid> </>}\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container\">\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date of Birth\"\r\n                  type=\"date\"\r\n                  defaultValue={today()}\r\n                  style={{ width: 230 }}\r\n                  defaultValue={DOB}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(event) => setDOB(event.target.value)}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container\">\r\n                <TextField\r\n                  required\r\n                  className=\"fields1\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Phone\"\r\n                  defaultValue={phone}\r\n                  onChange={(event) => setPhone(event.target.value)}\r\n                  type=\"Number\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container \">\r\n                <TextField\r\n                  // required\r\n                  id=\"outlined-multiline-static\"\r\n                  multiline\r\n                  rows={4}\r\n                  defaultValue={condition}\r\n                  className=\"fields1\"\r\n                  label=\"Medical Conditions\"\r\n                  type=\"Text\"\r\n                  onChange={(event) => setCondition(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"fields-container\"\r\n              container\r\n              item\r\n              lg={6}\r\n              sm={8}\r\n              xs={12}\r\n            >\r\n              <div className=\"fields-inner-container\">\r\n                <TextField\r\n                  className=\"fields1\"\r\n                  id=\"outlined-multiline-static\"\r\n                  multiline\r\n                  rows={4}\r\n                  defaultValue={history}\r\n                  label=\"Medical History / Add Details\"\r\n                  type=\"Text\"\r\n                  onChange={(event) => setHistory(event.target.value)}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"signUpButton\"\r\n              style={{\r\n                backgroundColor: \"#CF6A6A\",\r\n                color: \"white\",\r\n                fontWeight: \"bold\",\r\n                fontSize: 17,\r\n                borderRadius: 10,\r\n              }}\r\n              variant=\"contained\"\r\n              onClick={(e) => submit(e)}\r\n            >\r\n              SUBMIT\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss={false}\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainBody2;","import React, { useRef, useCallback, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst constraints = {\r\n    width: 250,\r\n    height: 250,\r\n    facingMode: \"user\"\r\n};\r\n    \r\nconst WebCam = (props) => {\r\n    const webcamRef = useRef(null);\r\n    const [imageSrc, setImageSrc] = useState(null)\r\n    const [activityIndicator, setActivityIndicator] = useState(false)\r\n    const [videoConstraints, setVideoConstraints] = useState(constraints)\r\n    \r\n    const capture = useCallback(\r\n        () => {\r\n            let image = webcamRef.current.getScreenshot()\r\n            setImageSrc(image);\r\n            props.demo(image)\r\n        },\r\n        [webcamRef]\r\n    );\r\n\r\n    const uploadDp = async(dp) => {\r\n        setActivityIndicator(true)\r\n        let formdata = new FormData();\r\n        formdata.append(\"profile_pic\", dp);\r\n        try{\r\n            const response = await fetch(props.url+props.ID, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Authorization': props.token\r\n                },\r\n                body: formdata,\r\n            })\r\n            // console.log(await response.text())\r\n            const resData = await response.json()\r\n            console.log(resData)\r\n            if(resData.updated){\r\n                toast.success(\"Uploaded Profile Picture\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                props.closeCamera(true)\r\n            }\r\n            else{\r\n                alert(\"Something went wrong\")\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            alert(\"Something went wrong\")\r\n        }\r\n        setActivityIndicator(false)\r\n    }\r\n    \r\n    return (\r\n        <div style={{width: 290, height: 310, border: '1.5px solid black', borderRadius: 5, textAlign:'center', backgroundColor: 'white'}}>\r\n            {activityIndicator && <LinearProgress />}\r\n            <ClearIcon onClick={() => props.closeCamera(false)} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer', color:'white'}} />\r\n            <Webcam\r\n                audio={false}\r\n                height={250}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={250}\r\n                videoConstraints={videoConstraints}\r\n                style={{marginTop: 10}}\r\n            />\r\n            <Button className=\"defred\" variant=\"contained\" color=\"secondary\" style={{marginRight: 5}} onClick={capture}>CAPTURE</Button>\r\n            {imageSrc!==null  && <Button className=\"defred\" variant=\"contained\" color=\"secondary\" style={{marginLeft: 5}} onClick={() => {\r\n                uploadDp(imageSrc)\r\n            }}>CONFIRM</Button>}\r\n            {/* <button onClick={() => {\r\n                if(videoConstraints.facingMode===\"user\"){\r\n                    setVideoConstraints({\r\n                        ...videoConstraints,\r\n                        facingMode: { exact: \"environment\" }\r\n                    })\r\n                }\r\n            }}>SWITCH</button> */}\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </div>\r\n    );\r\n}; \r\n\r\nexport default WebCam","import React, { useState, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Header from '../components/Header';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport MainBody2 from '../components/MainBody2';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Webcam from \"../components/Webcam\";\r\nimport useWillMount from '../custom hooks/useWillMount';\r\nimport { Context } from '../context/Context';\r\nimport './doctorSignup.css';\r\nvar myToken = null\r\n\r\nconst PatientDashboard = (props) => {\r\n    const [modal, setModal] = useState({state: false, type: \"Reports\"})\r\n    const [editModal, setEditModal] = useState({state: false, validation: false})\r\n    const [details, setDetails] = useState()\r\n    const [receiptAppointment, setReceiptAppointment] = useState(\"\")\r\n    const [type_of_report, set_type_of_report] = useState(\"\")\r\n    const [Reports, setReports] = useState(null)\r\n    const [Receipts, setReceipts] = useState(null)\r\n    const [report, setReport] = useState()\r\n    const [receipt, setReceipt] = useState()\r\n    const [receiptPrice, setReceiptPrice] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\");\r\n    const [Pass, setPass] = useState(\"\");\r\n    const [openCamera, setOpenCamera] = useState(false)\r\n    const [activityIndicator, setActivityIndicator] = useState(false)\r\n    const context = useContext(Context)\r\n\r\n    const usernamehandler = e => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const passhandler = e => {\r\n        setPass(e.target.value);\r\n    };\r\n    \r\n    const patientID = new URLSearchParams(props.location.search).get(\"id\")\r\n    // console.log(patientID)\r\n\r\n    const init = async() => {\r\n        const response = await fetch(\"api/patientdetails?id=\"+patientID, {\r\n            headers: {\r\n                'Authorization': context.Token\r\n            }\r\n        })\r\n        const details = await response.json()\r\n        console.log(details)\r\n        setDetails(details)\r\n    }\r\n\r\n    const view = async(type) => {\r\n        try{\r\n            const response = await fetch(`api/${type}?patientid=${patientID}`, {\r\n                headers: {\r\n                    'Authorization': context.Token\r\n                }\r\n            })\r\n            const resData = await response.json()\r\n            console.log(resData)\r\n            if(type==\"report\"){\r\n                setReports(resData)\r\n            }\r\n            else{\r\n                setReceipts(resData)\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useWillMount(() => {\r\n        let arr = []\r\n        if(context.is_doctor){\r\n            arr = [init(), view(\"receipt\"), view(\"report\")]\r\n        }\r\n        else{\r\n            arr = [init()]\r\n        }\r\n        Promise.all(arr)\r\n    })\r\n\r\n    const today = () => {\r\n        let dt = new Date()\r\n        return dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate()\r\n    }\r\n\r\n    const upload = async(type) => {\r\n        if(type===\"Receipt\"){\r\n            if(receiptPrice===\"\" && isNaN(parseFloat(receiptPrice)) && receiptAppointment===\"\")  {\r\n                alert(\"Enter proper values for Receipt details\")\r\n                return\r\n            }\r\n        }\r\n        else{\r\n            if(type_of_report===\"\"){\r\n                alert(\"Enter proper values for Report details\")\r\n                return\r\n            }\r\n        }\r\n        let formdata = new FormData()\r\n        if(type===\"Report\"){\r\n            formdata.append(\"filelocation\", report.file)  \r\n            formdata.append(\"typeof\", type_of_report)  \r\n            formdata.append(\"published_on\", today())\r\n        }\r\n        else{\r\n            formdata.append(\"filelocation\", receipt.file)\r\n            formdata.append(\"date\", today())\r\n            formdata.append(\"price\", receiptPrice)\r\n            formdata.append(\"doctor\", parseInt(receiptAppointment.doctor_id))\r\n            formdata.append(\"appointment\", parseInt(receiptAppointment.appt_id))\r\n        }\r\n        formdata.append(\"patient\", patientID)\r\n        console.log(formdata)\r\n        try{\r\n            document.getElementById('upload'+type).disabled = true\r\n            const response = await fetch(`api/${type.toLowerCase()}/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': context.Token\r\n                },\r\n                body: formdata\r\n            })\r\n            // console.log(await response.text())\r\n            const resData = await response.json()\r\n            console.log(resData)\r\n            if(resData.success){\r\n                toast.success(`Uploaded ${type}`, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                // if(type===\"Receipt\"){\r\n                //     // setReceipts(() => [...Receipts, {type_of: type_of_report}])\r\n                // }\r\n                // else{\r\n                //     setReports(() => [...Reports, {typeof: type_of_report, filelocation: resData.location}])\r\n                // }\r\n            }\r\n            document.getElementById('upload'+type).disabled = false\r\n            if(type===\"Report\"){\r\n                setReport(null)\r\n            }else{\r\n                setReceipt(null)\r\n            }\r\n            document.getElementById(type.toLowerCase() + '-upload').value = null\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const checkCredentials = async(e) => {\r\n        e.preventDefault()\r\n        if(details[0].username.username!==username){\r\n            alert(\"Wrong username\");\r\n            return;\r\n        }\r\n        setActivityIndicator(true)\r\n        try{\r\n            const res = await fetch(\"api/login/\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password: Pass\r\n                })\r\n            })\r\n            const resData = await res.json()\r\n            console.log(resData)\r\n            if(!resData.isPatient){\r\n                alert(\"Invalid credentials\")\r\n                setActivityIndicator(false)\r\n                return\r\n            }\r\n            if(resData.token){\r\n                myToken = resData.token\r\n                setEditModal({\r\n                    ...editModal,\r\n                    validation: true\r\n                })\r\n            }\r\n            else{\r\n                alert(\"Invalid credentials\")\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            alert(\"Something went wrong\")\r\n        }\r\n        setActivityIndicator(false)\r\n        // setTimeout(() => {\r\n        //     myToken = null\r\n        //     // alert(\"token gaya\")\r\n        //     setEditModal({\r\n        //         ...editModal,\r\n        //         validation: false\r\n        //     }) \r\n        // },300000)\r\n    };\r\n      \r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const body = (\r\n        modal.type === \"Reports\" ? <div style={{\r\n            top: '12.5%',\r\n            left: '7.5%',\r\n            width: '85%',\r\n            height: '75%',\r\n            overflowY: 'scroll'\r\n        }} className={classes.paper}>\r\n            <ClearIcon onClick={() => setModal({\r\n                ...modal,\r\n                state: false\r\n            })} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer'}} />\r\n            <h2 id=\"simple-modal-title\">Reports</h2>\r\n            {Reports===null ? <p>Loading Reports..</p> : Reports!==[] ? Reports.map((report) => (\r\n                <div>\r\n                    <a href={\"http://localhost:8000\"+report.filelocation}>{report.typeof}</a>\r\n                </div>\r\n            )) : <p>No Reports Found</p>}\r\n        </div> :\r\n        <div style={{\r\n            top: '12.5%',\r\n            left: '7.5%',\r\n            width: '85%',\r\n            height: '75%',\r\n            overflowY: 'scroll'\r\n        }} className={classes.paper}>\r\n            <ClearIcon onClick={() => setModal({\r\n                ...modal,\r\n                state: false\r\n            })} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer'}} />\r\n            <h2 id=\"simple-modal-title\">Receipts</h2>\r\n            {Receipts===null ? <p>Loading Receipts..</p> : Receipts!==[] ? Receipts.map((receipt) => (\r\n                <div>\r\n                    <a href={\"http://localhost:8000\"+receipt.filelocation}>{receipt.date}</a>\r\n                </div>\r\n            )) : <p>No Receipts Found</p>}\r\n        </div>\r\n    );\r\n\r\n    const editBody = () => {\r\n        if(editModal.validation){\r\n            let values = {\r\n                firstname: details[0].username.first_name,\r\n                lastname: details[0].username.last_name,\r\n                username: details[0].username.username,\r\n                condition: details[0].conditions,\r\n                DOB: details[0].username.DOB,\r\n                phone: details[0].username.contact_no,\r\n                email: details[0].username.email,\r\n                history: details[0].history\r\n            }\r\n            return (\r\n                <div style={{\r\n                    top: '12.5%',\r\n                    left: '7.5%',\r\n                    width: '85%',\r\n                    height: '80%'\r\n                }} className={classes.paper}>\r\n                    <ClearIcon onClick={() => setEditModal({\r\n                        ...editModal,\r\n                        state: false\r\n                    })} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer'}} />\r\n                    <MainBody2 \r\n                        url = {\"api/newpat/?patid=\"+patientID}\r\n                        type = \"PUT\"\r\n                        message = \"Patient Edited\"\r\n                        values = {values}\r\n                        edit={true}\r\n                        init={init}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div style={{\r\n                    top: '12.5%',\r\n                    left: '7.5%',\r\n                    width: '85%',\r\n                    height: '75%'\r\n                }} className={classes.paper}>\r\n                    {activityIndicator && <LinearProgress />}\r\n                    <ClearIcon onClick={() => setEditModal({\r\n                        ...editModal,\r\n                        state: false\r\n                    })} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer'}} />\r\n                    <div style={{flex: 1, flexDirection: 'column'}}>\r\n                        <div id=\"modalLogin\" style={{ textAlign: 'center'}}>\r\n                            <div className=\"innerField\">\r\n                                <form className=\"form\">\r\n                                <Grid container className=\"gridContainer\">\r\n                                    <h2>Patient Verification</h2>\r\n                                    <div className=\"fields-inner-container\">\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"email\"\r\n                                            label=\"Username\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            className=\"fields\"\r\n                                            onChange={usernamehandler}\r\n                                            value={username}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"fields-inner-container\">\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            className=\"fields\"\r\n                                            onChange={passhandler}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button type=\"submit\" className=\"signInButton\" id=\"stylebutton\"  variant=\"contained\" onClick={(e) => checkCredentials(e)}>SUBMIT</Button>\r\n                                    </div>\r\n                                </Grid>\r\n                                \r\n                                {/* <div style={{paddingBottom: 30}}>\r\n                                    <p>Dont have an account? <Link className=\"link\" to=\"/doctorsignup\">Sign Up</Link></p>\r\n                                </div> */}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const demoDP = (imageSrc) => {\r\n        document.getElementById(\"profilepic\").src = imageSrc\r\n    }\r\n\r\n    const showPatientAppointments = (flag) => {\r\n        let arr = context.appointments.map((appt) => {\r\n            if(appt.appointment.patient.patient_id == patientID){\r\n                if(flag){\r\n                    return (\r\n                        <div>\r\n                            <p>Doctor: {appt.appointment.doctor.username.username}</p>\r\n                            <p>Time: {appt.appointment.start_time}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    let obj = {\r\n                        doctor_id: appt.appointment.doctor.doctor_id,\r\n                        appt_id: appt.appointment.id\r\n                    }\r\n                    return(\r\n                        <option value={JSON.stringify(obj)}>{appt.appointment.doctor.username.username+\"@\"+appt.appointment.start_time}</option>\r\n                    )\r\n                }\r\n            } \r\n        })\r\n        if(arr.length === 0){\r\n            if(flag){\r\n                return <p>No appointments today</p>\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n    // )\r\n\r\n    return(\r\n        <div>\r\n        <Header />\r\n        <Grid container style={{paddingTop: 50}}>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n                <div style={{marginLeft: '10%', marginRight:'10%', marginTop: '5%'}}>\r\n                    <div style={{textAlign: 'left'}}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12} md={4}>\r\n                                <div>\r\n                                    {details && <><img id=\"profilepic\"\r\n                                        src = {details[0].username.profile_pic===null ? require(\"../images/defaultdp.webp\") : details[0].username.profile_pic}\r\n                                        className=\"LImage\"\r\n                                    ></img>{!context.is_doctor && <div style={{marginLeft: '25%'}}>\r\n                                        <PhotoCameraIcon style={{width: 40, height: 40, cursor: 'pointer'}} onClick = {() => {\r\n                                            if(!editModal.validation){\r\n                                                setEditModal({\r\n                                                    ...editModal,\r\n                                                    state: true\r\n                                                })\r\n                                            }\r\n                                            else{\r\n                                                setOpenCamera(!openCamera)\r\n                                            }\r\n                                        }} /> </div>}\r\n                                        {openCamera && \r\n                                            <Modal open={openCamera} style={{flex: 1, display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n                                                <div>\r\n                                                    <Webcam token={myToken} ID={patientID} url=\"api/newpat/?patid=\" demo={demoDP} closeCamera={(flag) => {\r\n                                                        setOpenCamera(false)\r\n                                                        if(!flag){\r\n                                                            if(details[0].username.profile_pic===null){\r\n                                                                document.getElementById(\"profilepic\").src = require(\"../images/defaultdp.webp\")\r\n                                                            }\r\n                                                            else{\r\n                                                                document.getElementById(\"profilepic\").src = details[0].username.profile_pic\r\n                                                            }\r\n                                                        } \r\n                                                    }} />\r\n                                                </div>\r\n                                            </Modal>\r\n                                        }\r\n                                        {/* <input id=\"dp-upload\" type=\"file\" style={{display: 'none'}} onChange={(e) => {\r\n                                            // let name = document.getElementById(\"dp-upload\").value\r\n                                            uploadDp(e.target.files[0])\r\n                                        }} /> */}\r\n                                    </>}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={8}>\r\n                                <p style={{marginTop: 30,fontSize: 30}}>{details && (details[0].username.first_name + \" \" + details[0].username.last_name)}</p>\r\n                                {!context.is_doctor && <Button variant=\"contained\" onClick={() => {\r\n                                    setEditModal({\r\n                                        ...editModal,\r\n                                        state: true\r\n                                    })\r\n                                }} style={{backgroundColor: \"#cf6a6a\", color: 'white', float: 'right'}}>EDIT</Button>}\r\n                                <div className=\"patientDetails margin_10\">\r\n                                    {details ? <>\r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Username:</b> {details[0].username.username}</p>\r\n                                    </div>\r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Date of Birth:</b> {details[0].username.DOB}</p>\r\n                                    </div>\r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Contact No.:</b> {details[0].username.contact_no}</p>\r\n                                    </div>\r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Email ID:</b> {details[0].username.email}</p>\r\n                                    </div> \r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Medical Conditions:</b> {details[0].conditions}</p>\r\n                                    </div>\r\n                                    <div style={{margin: 25}}>\r\n                                        <p style={{fontSize: 20}}><b>Medical History:</b> {details[0].history}</p>\r\n                                    </div> </> : <div class=\"lds-dual-ring\" style={{marginTop:'20%', marginBottom: '20%'}}></div>}\r\n                                </div>\r\n                                <div style={{marginTop: 30, marginBottom: 10, height: '40%', overflowY: 'scroll'}}>\r\n                                    <h5>APPOINTMENTS TODAY:</h5>\r\n                                    {showPatientAppointments(true)}\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n                <div style={{marginTop: '10%'}}>\r\n                    {/* <h2 style={{color:'#666'}}>REQUEST APPOINTMENT</h2>\r\n                    <div>\r\n                    <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Next appointment\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        style={{width: 200}}\r\n                    /></div>\r\n                    <Button variant=\"contained\" className=\"RequestButton margin_10_b\">\r\n                        REQUEST\r\n                    </Button> */}\r\n                    {context.is_doctor ? <div style={{paddingTop: '30%'}}> <div className=\"margin_10\">\r\n                        <Button variant=\"contained\" onClick={() => {\r\n                            setModal({\r\n                                type: \"Reports\",\r\n                                state: true\r\n                            })\r\n                        }} className=\"ViewModal\" style={{backgroundColor: \"#cf6a6a\", color: 'white'}}>\r\n                            VIEW REPORTS\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"contained\">\r\n                        <Button variant=\"margin_10\" onClick={() => {\r\n                            setModal({\r\n                                type: \"Receipts\",\r\n                                state: true\r\n                            })\r\n                        }} className=\"ViewModal\" style={{backgroundColor: \"#cf6a6a\", color: 'white'}}>\r\n                            VIEW RECEIPTS\r\n                        </Button>\r\n                    </div> </div> : <div style={{paddingTop: '30%'}}>\r\n\r\n                    <div className=\"margin_10\">\r\n                        <Button variant=\"contained\" onClick={() => {\r\n                            document.getElementById(\"report-upload\").click()\r\n                        }} className=\"ViewModal\" style={{backgroundColor: \"#cf6a6a\", color: 'white'}}>\r\n                            <input id=\"report-upload\" type=\"file\" style={{display: 'none'}} onChange={(e) => {\r\n                                let name = document.getElementById(\"report-upload\").value\r\n                                setReport({ file: e.target.files[0], name })\r\n                            }} />UPLOAD REPORTS\r\n                        </Button>\r\n                        {report && <div>\r\n                            <p>{report.name} <button id=\"uploadReport\" onClick={() => {\r\n                                upload(\"Report\")\r\n                            }}>Upload</button></p>\r\n                            <label for=\"type_of\">Type of</label>\r\n                            <input id=\"type_of\" onChange={(e) => {\r\n                                set_type_of_report(e.target.value)\r\n                            }} />\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"contained\">\r\n                        <Button  variant=\"contained\" onClick={() => {\r\n                            document.getElementById(\"receipt-upload\").click()\r\n                        }} className=\"ViewModal\" style={{backgroundColor: \"#cf6a6a\", color: 'white'}}>\r\n                            <input id=\"receipt-upload\" type=\"file\" style={{display: 'none'}} onChange={(e) => {\r\n                                let name = document.getElementById(\"receipt-upload\").value\r\n                                setReceipt({ file: e.target.files[0], name })\r\n                            }} />UPLOAD RECEIPTS\r\n                        </Button>\r\n                        {receipt && <div>\r\n                            <p>{receipt.name} <button id=\"uploadReceipt\" onClick={() => {\r\n                                upload(\"Receipt\")\r\n                            }}>Upload</button></p>\r\n                            <div>\r\n                                <label for=\"price\">Price</label>\r\n                                <input id=\"price\" onChange={(e) => {\r\n                                    setReceiptPrice(e.target.value)\r\n                                }} />\r\n                            </div>\r\n                            <div>\r\n                                <label for=\"select\">Appointment</label>\r\n                                <select id=\"select\" onChange={(e) => {\r\n                                    console.log(JSON.parse(e.target.value))\r\n                                    setReceiptAppointment(JSON.parse(e.target.value))\r\n                                }}>\r\n                                    <option value=\"\">Select</option>\r\n                                    {showPatientAppointments(false)}\r\n                                </select>\r\n                            </div>\r\n                        </div>}\r\n                    </div> </div>}\r\n                    <Modal\r\n                        open={modal.state}\r\n                        onClose={() => setModal({\r\n                            ...modal,\r\n                            state: false\r\n                        })}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {body}\r\n                    </Modal>\r\n                    <Modal\r\n                        open={editModal.state}\r\n                        onClose={() => setEditModal({\r\n                            ...editModal,\r\n                            state: false\r\n                        })}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {editBody()}\r\n                    </Modal>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss={false}\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientDashboard","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css'\r\n\r\nclass LeftSideBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LeftContainer\">\r\n        <div>\r\n          <img\r\n            src = {require(\"../images/hospital.jpg\")}\r\n            className=\"LImage\"\r\n            alt=\"Profile\"\r\n          ></img>\r\n        </div>\r\n        <Button variant=\"contained\" className={this.props.className}>\r\n          <Link className=\"link\" to=\"/home\">\r\n            Home\r\n          </Link>\r\n        </Button>\r\n        <div className=\"margin_10 margin_10_b\">\r\n          <Button variant=\"contained\" className={this.props.className1} >\r\n          <Link className=\"link\" to=\"/appointment\">\r\n            Appointments\r\n          </Link>\r\n        </Button>\r\n        </div>\r\n        \r\n        <Button variant=\"contained\" className={this.props.className2}>\r\n          <Link className=\"link\" to=\"/addpatient\">\r\n            New Patients\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LeftSideBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass PatientInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PContainer\">\r\n        <div className=\"PImage\">\r\n          <img id=\"dp\" src={this.props.dp===null ? require(\"../images/defaultdp.webp\") : this.props.dp} />\r\n        </div>\r\n        <div className=\"PInfo\">\r\n          <p>{this.props.name}</p>\r\n          <p>{this.props.dname}</p>\r\n          {/* <p>{this.props.desc}</p> */}\r\n          <div className='margin_10' style={{paddingTop: 10}}>\r\n            <Link to={`/patientdashboard?id=${this.props.id}`}>\r\n              <Button variant=\"contained\" color=\"secondary\" className=\"defred\">\r\n                Profile\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientInfo;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport PatientInfo from \"./PatientInfo\";\r\nimport { Context } from '../context/Context';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PanToolIcon from '@material-ui/icons/PanTool';\r\n\r\nconst MainBody = (props) => {\r\n  const context = useContext(Context)\r\n  const [patientsToShow, setPatientsToShow] = useState(null)\r\n\r\n  const search = () => {\r\n    let val = document.getElementById(\"searchInput\").value.trim().toLowerCase()\r\n    if(val===\"\"){\r\n      setPatientsToShow(context.patients)\r\n    }\r\n    else{\r\n      let arr = context.patients.filter( pat => { \r\n        let flag = pat.username.username.toLowerCase().includes(val) // && pat.present==false\r\n        return flag\r\n      })\r\n      console.log(arr)\r\n      setPatientsToShow(arr)\r\n    }\r\n  }\r\n\r\n  const patList = () => {\r\n    if(context.loading){\r\n      return(\r\n        <div class=\"lds-dual-ring\" ></div>\r\n      )\r\n    }\r\n    let arr = patientsToShow;\r\n    if(patientsToShow===null){\r\n      arr = context.patients\r\n    }\r\n    return arr.map((patient) => {\r\n      return(\r\n        <Grid md={4} sm={6} xs={12} style={{marginBottom: 30}}>\r\n          <PatientInfo\r\n            name={patient.username.username}\r\n            dname={patient.username.first_name+\" \"+patient.username.last_name}\r\n            dp={patient.username.profile_pic}\r\n            id={patient.patient_id}\r\n          ></PatientInfo>\r\n        </Grid>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainContainer\" style={{marginLeft: 20}}>\r\n      <p className=\"MainPara\">\r\n        <span className=\"span1\">Patients</span>\r\n        {/* <PanToolIcon onClick={() => this.setState({open: true})} style={{float: 'right', marginTop: 12}} /> */}\r\n        <input\r\n          id=\"searchInput\"\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n          className=\"SearchBar\"\r\n          onKeyDown={() => setTimeout(() => search(), 1)}\r\n        ></input>\r\n      </p><p  style={{marginTop: 100}}>\r\n        <Grid container style={{height: 450, overflowY:'scroll'}}>\r\n          {patList()}\r\n        </Grid>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default MainBody;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Context } from '../context/Context';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport PanToolIcon from '@material-ui/icons/PanTool';\r\n\r\nconst RightSideBar = (props) => {\r\n  const context = useContext(Context)\r\n  const [spinner, showSpinner] = useState(false)\r\n\r\n  const status = (start_time, present) => {\r\n    let dt = new Date()\r\n    let time = dt.getHours()*60 + dt.getMinutes()\r\n    if(parseInt(start_time.slice(0,2))*60 + parseInt(start_time.slice(3,5)) < time){\r\n      if(present){\r\n        return(<DoneIcon />)\r\n      }\r\n      return(<WarningIcon />)\r\n    }\r\n    else{\r\n      if(present){\r\n        return(<ThumbUpIcon />)\r\n      }\r\n    }\r\n  }\r\n\r\n  const DOWcodes = {\r\n    0: 'Sunday',\r\n    1: 'Monday',\r\n    2: 'Tuesday',\r\n    3: 'Wednesday',\r\n    4: 'Thursday',\r\n    5: 'Friday',\r\n    6: 'Saturday'\r\n  }\r\n\r\n  const today = () => {\r\n    let dt = new Date()\r\n    return DOWcodes[dt.getDay()] + \", \" + dt.getDate() + \"/\" + (dt.getMonth() + 1) + \"/\" + dt.getFullYear()\r\n  }\r\n\r\n  const markAttendance = async(apptID, index) => {\r\n    // alert(\"x\")\r\n    showSpinner(true)\r\n    try{\r\n      const response = await fetch(`api/markAttend/?id=${apptID}`)\r\n      // console.log(await response.text())\r\n      const res = await response.json()\r\n      console.log(res)\r\n      context.attendance(index)\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    showSpinner(false)\r\n  }\r\n\r\n  const showMarker = (present, end_time) => {\r\n    if(present){\r\n      return false\r\n    }\r\n    else{\r\n      let dt = new Date()\r\n      let time = dt.getHours()*60 + dt.getMinutes()\r\n      if(parseInt(end_time.slice(0,2))*60 + parseInt(end_time.slice(3,5)) < time){\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"RightContainer\">\r\n      {/* <p>Time: {appointment.appointment.start_time}</p> */}\r\n      <p>{today()}</p>\r\n      <div style={{position:'relative', height: '80vh', overflowY: 'scroll'}}>\r\n        {spinner && <div style={{width: '100%', height:'100%', top: 0, left: 0, position: 'absolute', zIndex: 1001, backgroundColor: 'rgba(255,255,255,0.5)'}}>\r\n          <div class=\"lds-dual-ring\" style={{marginTop:'70%'}}></div>\r\n        </div>}\r\n        {context.appointments.length>0 ? context.appointments.map((appointment, index) => (\r\n          <div style={{marginBottom: 15}}>\r\n            <h6>QUEUE: {appointment.token} {status(appointment.appointment.start_time, appointment.present)}</h6>\r\n            <p>Name: {appointment.appointment.patient.username.first_name + \" \" + appointment.appointment.patient.username.last_name}</p>\r\n            <p>Doctor: {appointment.appointment.doctor.username.first_name + \" \" + appointment.appointment.doctor.username.last_name}</p>\r\n            <p>Time: {appointment.appointment.start_time}</p>\r\n            {/* <p>{appointment.appointment.id}</p> */}\r\n            {showMarker(appointment.present, appointment.appointment.end_time) && <Button variant=\"contained\"\r\n              color=\"secondary\" className=\"defred\" onClick={() => markAttendance(appointment.appointment.id, index)}>\r\n                <PanToolIcon />\r\n              </Button>}\r\n          </div>\r\n        )) : <p>No Appointments Today</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RightSideBar","import React from \"react\";\r\nimport \"../App.css\";\r\nimport LeftSideBar from \"../components/LeftSideBar\";\r\nimport MainBody from \"../components/MainBody\";\r\nimport RightSideBar from \"../components/RightSideBar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Receptionist1() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Container fluid className=\"ContainerMargin\">\r\n        <Row className=\"RowMarginAppointment\">\r\n          <Col xs={12} md={3} lg={2} className=\"Cellpadding\">\r\n            <LeftSideBar className=\"defred\" />\r\n          </Col>\r\n          <Col xs={12} md={6} lg={8} className=\"Cellpadding\">\r\n            <MainBody />\r\n          </Col>\r\n          <Col xs={12} md={3} lg={2} className=\"Cellpadding\">\r\n            <RightSideBar />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receptionist1;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Context } from \"../context/Context\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default class Schedule extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    person: null,\r\n    doctors: [],\r\n    type: [\"X-ray\", \"checkup\", \"sonography\", \"other\"],\r\n    dates: [],\r\n    patients: [],\r\n    slots: [],\r\n    selectedType: null,\r\n    selectedPatient: null,\r\n    selectedDoctor: null,\r\n    selectedDate: null,\r\n    selectedSlot: null,\r\n    spinnerVisible: false\r\n  };\r\n\r\n  static contextType = Context;\r\n\r\n  leapYr = () => {\r\n    let y = new Date().getYear()\r\n    if(y%400 === 0 || (y%100 !== 0 && y%4 === 0)){\r\n      return 29\r\n    }\r\n    return 28\r\n  }\r\n\r\n  daysInMonth = {\r\n    1: 31,\r\n    2: this.leapYr(),\r\n    3: 31,\r\n    4: 30,\r\n    5: 31,\r\n    6: 30,\r\n    7: 31,\r\n    8: 31,\r\n    9: 30,\r\n    10: 31,\r\n    11: 30,\r\n    12: 31 \r\n  }\r\n  \r\n  componentDidMount() {\r\n    let arr = [];\r\n    let dt = new Date() \r\n    let y = dt.getYear() + 1900\r\n    let m = dt.getMonth() + 1\r\n    let d = dt.getDate() - 1\r\n    \r\n    for (let i = 0; i < 7; i++) {\r\n      d += 1\r\n      if(d == this.daysInMonth[m] + 1) {\r\n        m += 1\r\n        d = 1\r\n        if(m==13){\r\n          m = 1\r\n          y += 1\r\n        }\r\n      }\r\n      arr.push(\r\n        y +\r\n        \"-\" +\r\n        m +\r\n        \"-\" +\r\n        d\r\n      );\r\n    }\r\n    console.log(this.context);\r\n    this.setState({ dates: arr, loading: false });\r\n  }\r\n\r\n  appointmentValidation = () => {\r\n    const { selectedType, selectedPatient, selectedDoctor, selectedDate, selectedSlot } = this.state\r\n    if(selectedType!==null && selectedPatient!==null && selectedDoctor!==null && selectedDate!==null && selectedSlot!==null){\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  getSlotsValidation = () => {\r\n    const { selectedDoctor, selectedDate } = this.state\r\n    if(selectedDoctor!==null && selectedDate!==null){\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  getTherapistData = async (docID, date) => {\r\n    // alert(\"getslots\")\r\n    const { selectedDoctor, selectedDate } = this.state\r\n    // alert(selectedDoctor)\r\n    if(selectedDoctor!==null && selectedDate!==null){\r\n      // alert(\"apicall\")\r\n      // document.getElementById(\"confirm\").disabled = false;\r\n      this.setState({spinnerVisible: true, slots: []})\r\n      const url = `api/newAppointment?id=${parseInt(selectedDoctor)}&date=${selectedDate}`;\r\n      const response = await fetch(url);\r\n      // console.log(await response.text())\r\n      const data = await response.json();\r\n      console.log(data);\r\n      this.availableSlots(data.doctor, data.patients);\r\n    }\r\n  };\r\n\r\n  availableSlots(doctorData, patientData) {\r\n    if (\r\n      patientData.length ===\r\n      parseInt(doctorData.daily_end_time.slice(0, 2)) -\r\n        parseInt(doctorData.daily_start_time.slice(0, 2))\r\n    ) {\r\n      toast.error(\"No slots available\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      this.setState({slots: [], spinnerVisible: false})\r\n    } else {\r\n      let abc = patientData.map((x) => {\r\n        return x.start_time;\r\n      });\r\n      let array = [];\r\n      let current = doctorData.daily_start_time;\r\n      let dt = new Date()\r\n      let splitUp = current.split(\":\")\r\n      if((dt.getMinutes() + (dt.getHours()*60)) > ((parseInt(splitUp[0])*60) + parseInt(splitUp[1]))){\r\n        if(dt.getMinutes() > 30){\r\n          splitUp[0] = this.hoursCalc((dt.getHours() + 1).toString())\r\n        }\r\n        else{\r\n          splitUp[0] = this.hoursCalc(dt.getHours().toString())\r\n          splitUp[1] = \"30\"\r\n        }\r\n        current = splitUp.join(\":\")\r\n      }\r\n      array.push(current);\r\n      let flag = true;\r\n      if (current.split(\":\")[1] === \"30\") {\r\n        flag = false;\r\n      }\r\n      while (doctorData.daily_end_time !== current) {\r\n        if (flag) {\r\n          let temp = current.split(\":\");\r\n          current = this.hoursCalc(temp[0]) + \":\" + (parseInt(temp[1]) + 30) + \":\" + temp[2];\r\n          array.push(current);\r\n        } else {\r\n          let temp1 = current.split(\":\");\r\n          current = this.hoursCalc((parseInt(temp1[0]) + 1).toString()) + \":\" + \"00\" + \":\" + temp1[2];\r\n          array.push(current);\r\n        }\r\n        flag = !flag;\r\n      }\r\n      array.pop();\r\n      let slots = array.filter((element) => {\r\n        return (!abc.includes(element) );\r\n      });\r\n      console.log(slots);\r\n      this.setState({ slots, spinnerVisible: false });\r\n    }\r\n  }\r\n\r\n  hoursCalc = (hr) => {\r\n    if(hr.length===1){\r\n      return \"0\"+hr\r\n    }\r\n    return hr\r\n  }\r\n\r\n  confirmAppointment = () => {\r\n    let formdata = new FormData();\r\n    formdata.append(\"doctor\", parseInt(this.state.selectedDoctor));\r\n    formdata.append(\"patient\", parseInt(this.state.selectedPatient));\r\n    formdata.append(\"type_of\", this.state.selectedType);\r\n    formdata.append(\"start_time\", this.state.selectedSlot);\r\n    formdata.append(\"date\", this.state.selectedDate);\r\n    if (this.state.selectedSlot.split(\":\")[1] === \"00\") {\r\n      let temp = this.state.selectedSlot.split(\":\");\r\n      let end_time = temp[0] + \":\" + (parseInt(temp[1]) + 30) + \":\" + temp[2];\r\n      formdata.append(\"end_time\", end_time);\r\n    } else {\r\n      let temp1 = this.state.selectedSlot.split(\":\");\r\n      let end_time = parseInt(temp1[0]) + 1 + \":\" + \"00\" + \":\" + temp1[2];\r\n      formdata.append(\"end_time\", end_time);\r\n    }\r\n    fetch(\"api/newAppointment/\", {\r\n      method: \"POST\",\r\n      body: formdata,\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if(response['Not posssible']){\r\n          toast.error(\"This slot has been booked\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n        else{\r\n          let temp = this.state.slots;\r\n          let index = temp.findIndex((slot) => slot === this.state.selectedSlot);\r\n          console.log(index);\r\n          if(index>=0){\r\n            temp.splice(index, 1);\r\n          }\r\n          console.log(temp);\r\n          this.setState({\r\n            slots: temp,\r\n            // confirmVisible: false,\r\n          });\r\n          toast.success(\"Appointment booked\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          this.context.forceRefreshAppt();\r\n          document.getElementById(\"slot\").textContent = temp[0];\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"ScheduleContainer \" style={{textAlign:'center'}}>\r\n        <div className=\"MainPara\">\r\n          <span className=\"span1\">SCHEDULE APPOINTMENTS</span>\r\n          <div className=\"defgrey appointmentbox\">\r\n            <p>PATIENT:</p>\r\n            {this.context.doctors.hasOwnProperty('No Patients') ? <p>No Patients Yet</p> : this.context.patients.length === 0 ? (\r\n              <p>Loading Patients...</p>\r\n            ) : (\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={this.context.patients}\r\n                getOptionLabel={(option) =>\r\n                  // option.id.toString() + \": \" + \r\n                  option.username.username\r\n                }\r\n                style={{ width: 300 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Patient\" variant=\"outlined\" />\r\n                )}\r\n                onChange={(e, newValue) => {\r\n                  this.setState({\r\n                    selectedPatient: newValue===null ? null : newValue.patient_id,\r\n                  });\r\n                }}\r\n              />\r\n            )}\r\n            <p class=\"margin_10\">DOCTOR:</p>\r\n            {this.context.doctors.hasOwnProperty('No Doctors') ? <p>No Doctors Yet</p> : this.context.doctors.length === 0 ? (\r\n              <p>Loading Doctors...</p>\r\n            ) : (\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={this.context.doctors}\r\n                getOptionLabel={(option) =>\r\n                  // option.id.toString() + \": \" + \r\n                  option.username.username\r\n                }\r\n                style={{ width: 300 }}\r\n                // onInputChange={(event, newInputValue) => {\r\n                //   // alert(\"newInputValue\"+newInputValue)\r\n                //   this.setState({\r\n                //     selectedDoctor: newInputValue,\r\n                //     // confirmVisible: true,\r\n                //   });\r\n\r\n                // }}\r\n                renderInput={(params) => {\r\n                  return (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Doctor\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  );\r\n                }}\r\n                onChange={async(e, newValue) => {\r\n                  // alert(Object.keys(newValue))\r\n                  // alert(newValue['doctor_id'])\r\n                  await this.setState({\r\n                    selectedDoctor: newValue===null ? null : newValue['doctor_id'],\r\n                  });\r\n                  this.getTherapistData()\r\n                }}\r\n              />\r\n            )}\r\n            <p class=\"margin_10\">TYPE OF APPOINTMENT:</p>\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={this.state.type}\r\n              getOptionLabel={(option) => option}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => {\r\n                return (\r\n                  <TextField {...params} label=\"Type\" variant=\"outlined\" />\r\n                );\r\n              }}\r\n              onChange={(e, newValue) => {\r\n                this.setState({ selectedType: newValue });\r\n              }}\r\n            />\r\n            <div style={{display: \"flex\", flex: 1}}>\r\n              <div class = \"margin_10\" style={{ float: \"left\" }}>\r\n                <p>DATE:</p>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={this.state.dates}\r\n                  getOptionLabel={(option) => option.toString()}\r\n                  style={{ width: 140 }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Date\" variant=\"outlined\" />\r\n                  )}\r\n                  onChange={async(e, newValue) => {\r\n                    // alert(newValue)\r\n                    await this.setState({ selectedDate: newValue });\r\n                    this.getTherapistData()\r\n                  }}\r\n                />\r\n              </div>\r\n              {this.state.spinnerVisible && <div class=\"lds-dual-ring\" style={{marginLeft: 95, marginTop: 80}}></div>}\r\n              {this.getSlotsValidation() &&\r\n                this.state.slots.length !== 0 && (\r\n                  <div class=\"margin_10\" style={{ float: \"right\", marginLeft: 20, marginRight: \"45px\" }}>\r\n                    <p>SLOT:</p>\r\n                    <Autocomplete\r\n                      id=\"slot\"\r\n                      options={this.state.slots}\r\n                      getOptionLabel={(option) => option.toString()}\r\n                      style={{ width: 140 }}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} label=\"Slot\" variant=\"outlined\" />\r\n                      )}\r\n                      onChange={(e, newValue) => {\r\n                        this.setState({\r\n                          selectedSlot: newValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) }\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className=\"defred\"\r\n              id=\"confirm\"\r\n              style={{ alignSelf: 'center',marginLeft: \"35%\", marginTop: 50, zIndex: 1001 }}\r\n              onClick={this.confirmAppointment}\r\n              disabled={!this.appointmentValidation()}\r\n            >\r\n              Confirm\r\n            </Button>\r\n            <ToastContainer\r\n              position=\"top-center\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss={false}\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport LeftSideBar from \"../components/LeftSideBar\";\r\nimport Schedule from \"../components/Schedule\";\r\nimport RightSideBar from \"../components/RightSideBar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Receptionist2() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"ContainerMargin\" fluid>\r\n        <Row className=\"RowMarginAppointment\">\r\n          <Col xs={12} md={4} className=\"Cellpadding\">\r\n            <LeftSideBar className1=\"defred\" />\r\n          </Col>\r\n          <Col xs={12} md={5} className=\"Cellpadding\">\r\n            <div id=\"div1\">\r\n              <Row>\r\n                  <Schedule />\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12} md={3} lg={2} className=\"Cellpadding\">\r\n            <RightSideBar />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Receptionist2;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport Header from \"../components/Header\";\r\nimport LeftSideBar from \"../components/LeftSideBar\";\r\nimport MainBody2 from \"../components/MainBody2\";\r\nimport RightSideBar from \"../components/RightSideBar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst defVal = {\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  username: \"\",\r\n  condition: \"-\",\r\n  password1: \"\",\r\n  password2: \"\",\r\n  DOB: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  history: \"-\"\r\n}\r\n\r\nfunction Receptionist3() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container fluid className=\"ContainerMargin\">\r\n        <Row>\r\n          <Col xs={12}  lg={3} xl={2} className=\"Cellpadding\">\r\n            <LeftSideBar className2=\"defred\" />\r\n          </Col>\r\n          <Col xs={12}  lg={6} xl={8} className=\"Cellpadding\">\r\n            <MainBody2 \r\n              url = \"api/newpat/\"\r\n              type = \"POST\"\r\n              message = \"New Patient Added\"\r\n              values = {defVal}\r\n              edit={false}\r\n            />\r\n          </Col>\r\n          <Col xs={12} lg={3} xl={2} className=\"Cellpadding\">\r\n            <RightSideBar />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receptionist3;\r\n","import React, { Component } from \"react\";\r\nimport SignupForm from './signupForm';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Webcam from \"../components/Webcam\";\r\nimport { Context } from \"../context/Context\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\n\r\nclass LeftSideBarDoctor extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      modal: false,\r\n      activityIndicator: false,\r\n      openCamera: false\r\n    }\r\n  }\r\n\r\n  static contextType = Context\r\n\r\n  demoDP = (imageSrc) => {\r\n    document.getElementById('profilepic').src = imageSrc \r\n  }\r\n\r\n  render() {\r\n    const { modal, activityIndicator, openCamera } = this.state\r\n    const { doctor, token, classes } =  this.props\r\n    const values = {\r\n      firstname: doctor.username.first_name,\r\n      lastname: doctor.username.last_name,\r\n      qualification: doctor.qualification,\r\n      speciality: doctor.speciality,\r\n      postgrad: doctor.postgrad,\r\n      email: doctor.username.email,\r\n      DOB: doctor.username.DOB,\r\n      phone: doctor.username.contact_no,\r\n      dailyTime: doctor.daily_start_time,\r\n      endTime: doctor.daily_end_time\r\n    }\r\n\r\n    return (\r\n      <div className=\"LeftContainer\">\r\n        <div>\r\n          <img\r\n            id = \"profilepic\"\r\n            src = {doctor.username.profile_pic===null ? require(\"../images/defaultdp.webp\") : doctor.username.profile_pic}\r\n            className=\"LImage\"\r\n          ></img>\r\n          <div>\r\n            <PhotoCameraIcon style={{width: 40, height: 40, cursor: 'pointer', marginBottom: 5}} onClick = {() => {    \r\n              this.setState({ openCamera: !openCamera })\r\n            }} /> </div>\r\n            <p><b>Name:</b> {doctor.username.first_name + \" \" + doctor.username.last_name}</p>\r\n            <p><b>Qualifications:</b> {doctor.qualification + \", \" + doctor.postgrad}</p>\r\n            <p><b>Daily Timing:</b> {doctor.daily_start_time + \" - \" + doctor.daily_end_time}</p>\r\n            <p className =\"margin_10\"><b>Username:</b> {doctor.username.username}</p>\r\n            <p><b>Email-ID:</b> {doctor.username.email}</p>\r\n            <p><b>Contact No.:</b> {doctor.username.contact_no}</p>\r\n            <p><b>Date of Birth:</b> {doctor.username.DOB}</p>\r\n        </div>\r\n        {openCamera && \r\n          <Modal open={openCamera} style={{flex: 1, display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n              <div>\r\n                  <Webcam token={this.context.Token} ID={doctor.doctor_id} url=\"api/newdoc/?docid=\" demo={this.demoDP} closeCamera={(flag) => {\r\n                      this.setState({ openCamera: false })\r\n                      if(!flag){\r\n                          if(doctor.username.profile_pic===null){\r\n                              document.getElementById(\"profilepic\").src = require(\"../images/defaultdp.webp\")\r\n                          }\r\n                          else{\r\n                              document.getElementById(\"profilepic\").src = doctor.username.profile_pic\r\n                          }\r\n                      } \r\n                  }} />\r\n              </div>\r\n          </Modal>\r\n        }\r\n        <Button className=\"defred\" variant=\"contained\" color=\"secondary\" onClick={() => {\r\n          this.setState({ modal: true })\r\n        }}>EDIT</Button>\r\n        <Modal\r\n          open={modal}\r\n          style={{textAlign:'center', marginLeft: '10%', marginTop: '5%'}}\r\n        >\r\n          <div className={classes.paper} style={{width: '93%', height: '88%'}}>\r\n            {activityIndicator && <LinearProgress />}\r\n            <ClearIcon onClick={() => {\r\n              this.setState({ modal: false })\r\n            }} style={{position: 'absolute', right: 10, top: 10, cursor: 'pointer'}} />\r\n            <SignupForm\r\n              activity={(flag) => {\r\n                this.setState({ activityIndicator: flag })\r\n                if(!flag){\r\n                  this.context.refreshProfile(doctor.doctor_id)\r\n                }\r\n              }}\r\n              values={values}\r\n              method=\"PUT\"\r\n              url={'api/newdoc/?docid='+doctor.doctor_id}\r\n              message=\"Doctor Edited\"\r\n              token={this.context.Token}\r\n            />\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LeftSideBarDoctor;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nclass AppointmentDay extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"AppointmentContainer\">\r\n        <p class=\"Para\">\r\n          <h2 className=\"span3 margin_10\">APPOINTMENTS OF THE DAY :</h2>\r\n        </p>\r\n        <div class=\"PContainer1 margin_10\">\r\n          {this.props.patients.map((patient) => (\r\n            <div class=\"Patientcard\" style={{flex: 1, flexDirection: 'row'}}>\r\n              <Grid container>\r\n                <Grid item md={9} sm={6} xs={12}>\r\n                  <div class=\"PatientNameTime\" >\r\n                    <div>\r\n                      <span id=\"PatientName\"><b>Patient Name:</b> {patient.patient.username.first_name + \" \" + patient.patient.username.last_name}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span><b>Time:</b> {patient.start_time} </span>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={3} sm={6} xs={12}>\r\n                  <div class=\"Patientprofilebutton\">\r\n                    <Link to={\"/patientdashboard?id=\" + patient.patient.patient_id}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        id=\"TButton\"\r\n                        className=\"defred\"\r\n                        onclick\r\n                      >\r\n                        View Profile\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppointmentDay;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport Header from \"../components/Header\";\r\nimport LeftSideBarTherapist from \"../components/LeftSideBarDoctor\";\r\nimport AppointmentDay from \"../components/AppointmentDay\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Context } from '../context/Context';\r\n\r\nfunction DoctorDashboard(props) {\r\n  const context = useContext(Context)\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container fluid className=\"ContainerMargin\">\r\n        {context.doctorProfile!==null && \r\n          <Row>\r\n            <Col xs={12} md={3} className=\"Cellpadding\">\r\n              <LeftSideBarTherapist doctor={context.doctorProfile.doctor} token={context.Token} classes={classes} />\r\n            </Col>\r\n            <Col xs={12} md={7} className=\"Cellpadding\">\r\n              <AppointmentDay patients={context.doctorProfile.patients} />\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n","import React from 'react';\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <>\r\n            <h1>404</h1>\r\n            <p>Page Not Found</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React, { useContext } from \"react\";\r\nimport { Route, BrowserRouter, Redirect, Switch } from \"react-router-dom\";\r\nimport DoctorSignup from \"./views/DoctorSignup\";\r\nimport SignIn from \"./views/SignIn\";\r\nimport PatientDashboard from \"./views/patientDashboard\";\r\nimport Receptionist1 from \"./views/receptionist1\";\r\nimport Receptionist2 from \"./views/receptionist2\";\r\nimport Receptionist3 from \"./views/receptionist3\";\r\nimport DoctorDashboard from \"./views/doctorDashboard\";\r\nimport NotFound from \"./views/NotFound\";\r\nimport \"./App.css\";\r\nimport { Context } from \"./context/Context\";\r\n\r\nconst App = () => { \r\n  const context = useContext(Context)\r\n  console.log(context);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {context.loggedIn!==null && <BrowserRouter> \r\n        {context.loggedIn ? \r\n          <>\r\n            {context.is_doctor ? \r\n              <Switch>\r\n                <Route exact path=\"/profile\" component={DoctorDashboard} />\r\n                <Route exact path=\"/patientdashboard\" component={PatientDashboard} />\r\n                <Redirect exact from=\"/\" to=\"/profile\" />\r\n                <Route path=\"*\" component={NotFound} />\r\n              </Switch> \r\n            :\r\n              <Switch>\r\n                <Route exact path=\"/home\" component={Receptionist1} />\r\n                <Route exact path=\"/appointment\" component={Receptionist2} />\r\n                <Route exact path=\"/addpatient\" component={Receptionist3} />\r\n                <Route exact path=\"/doctorsignup\" component={DoctorSignup} />\r\n                <Route exact path=\"/patientdashboard\" component={PatientDashboard} />\r\n                <Redirect exact from=\"/\" to=\"/home\" />\r\n                <Route path=\"*\" component={NotFound} />\r\n              </Switch>\r\n            }\r\n          </>\r\n        : \r\n          <Switch>\r\n            <Route exact path=\"/\" component={SignIn} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        }\r\n      </BrowserRouter>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ContextProvider from './context/Context'\n\nReactDOM.render(<ContextProvider><App /></ContextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/defaultdp.7ca9ab5f.webp\";"],"sourceRoot":""}